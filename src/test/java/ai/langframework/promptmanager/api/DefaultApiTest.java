/*
 * CORE-PromptManager-API
 * Prompt Manager REST API Endpoints
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ai.langframework.promptmanager.api;

import ai.langframework.promptmanager.client.ApiException;
import ai.langframework.promptmanager.model.CategoryModel;
import ai.langframework.promptmanager.model.CommentModel;
import ai.langframework.promptmanager.model.LikeModel;
import ai.langframework.promptmanager.model.PromptModel;
import ai.langframework.promptmanager.model.UserModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV1PromptsCategoriesCallerIdOptionsTest() throws ApiException {
        String callerId = null;
        Object response = api.apiV1PromptsCategoriesCallerIdOptions(callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV1PromptsPromptPromptIdCallerCallerIdOptionsTest() throws ApiException {
        String promptId = null;
        String callerId = null;
        Object response = api.apiV1PromptsPromptPromptIdCallerCallerIdOptions(promptId, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV1PromptsPromptsCallerIdOptionsTest() throws ApiException {
        String callerId = null;
        Object response = api.apiV1PromptsPromptsCallerIdOptions(callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCategoryTest() throws ApiException {
        String callerId = null;
        CategoryModel categoryModel = null;
        Object response = api.createCategory(callerId, categoryModel);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPromptTest() throws ApiException {
        String callerId = null;
        PromptModel promptModel = null;
        api.createPrompt(callerId, promptModel);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        String callerId = null;
        UserModel userModel = null;
        Object response = api.createUser(callerId, userModel);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCategoryTest() throws ApiException {
        String callerId = null;
        String categoryId = null;
        Object response = api.deleteCategory(callerId, categoryId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePromptTest() throws ApiException {
        String promptId = null;
        String callerId = null;
        Object response = api.deletePrompt(promptId, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String userId = null;
        String callerId = null;
        Object response = api.deleteUser(userId, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCategoriesTest() throws ApiException {
        String callerId = null;
        Object response = api.getCategories(callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCategoryByNameTest() throws ApiException {
        String categoryName = null;
        String callerId = null;
        Object response = api.getCategoryByName(categoryName, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPromptCommentsTest() throws ApiException {
        String promptId = null;
        String callerId = null;
        Object response = api.getPromptComments(promptId, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPromptDetailsTest() throws ApiException {
        String promptId = null;
        String callerId = null;
        Object response = api.getPromptDetails(promptId, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPromptLikesTest() throws ApiException {
        String promptId = null;
        String callerId = null;
        Object response = api.getPromptLikes(promptId, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPromptsTest() throws ApiException {
        String callerId = null;
        Object response = api.getPrompts(callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPromptsByCategoryTest() throws ApiException {
        String callerId = null;
        String categoryId = null;
        Object response = api.getPromptsByCategory(callerId, categoryId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPromptsByUserTest() throws ApiException {
        String userId = null;
        String callerId = null;
        Object response = api.getPromptsByUser(userId, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserDetailsTest() throws ApiException {
        String userId = null;
        String callerId = null;
        Object response = api.getUserDetails(userId, callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUsersTest() throws ApiException {
        String callerId = null;
        Object response = api.getUsers(callerId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void likePromptTest() throws ApiException {
        String promptId = null;
        String callerId = null;
        LikeModel likeModel = null;
        Object response = api.likePrompt(promptId, callerId, likeModel);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCommentOnPromptTest() throws ApiException {
        String promptId = null;
        String callerId = null;
        CommentModel commentModel = null;
        Object response = api.postCommentOnPrompt(promptId, callerId, commentModel);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchPromptsTest() throws ApiException {
        String callerId = null;
        String search = null;
        Object response = api.searchPrompts(callerId, search);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCategoryTest() throws ApiException {
        String callerId = null;
        String categoryId = null;
        CategoryModel categoryModel = null;
        Object response = api.updateCategory(callerId, categoryId, categoryModel);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePromptTest() throws ApiException {
        String promptId = null;
        String callerId = null;
        PromptModel promptModel = null;
        Object response = api.updatePrompt(promptId, callerId, promptModel);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        String userId = null;
        String callerId = null;
        UserModel userModel = null;
        Object response = api.updateUser(userId, callerId, userModel);
        // TODO: test validations
    }

}
